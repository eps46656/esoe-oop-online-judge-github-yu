# Generated by Django 3.1.7 on 2021-03-30 17:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('staff_viewable_only', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('input_format', models.TextField()),
                ('output_format', models.TextField()),
                ('sample_input', models.TextField()),
                ('sample_output', models.TextField()),
                ('deadline_datetime', models.DateTimeField()),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problems', to='auth.group')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to='auth.user')),
                ('name', models.CharField(max_length=32)),
                ('github_account', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')])),
                ('github_repository', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')])),
                ('solved_problems', models.ManyToManyField(blank=True, related_name='solved_profiles', to='judge.Problem')),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('SU', 'Submitting'), ('SE', 'Submission Error'), ('CO', 'Compiling'), ('CE', 'Compilation Error'), ('JU', 'Judging'), ('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('RE', 'Runtime Error')], default='SU', max_length=2)),
                ('submission_datetime', models.DateTimeField()),
                ('detailed_messages', models.TextField(blank=True)),
                ('detailed_messages_stderr', models.TextField(blank=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.profile')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='RequiredFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=32)),
                ('via', models.CharField(choices=[('S', 'Submitted'), ('P', 'Provided')], max_length=1)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judge.problem')),
            ],
            options={
                'ordering': ['problem__pk', 'via', 'filename'],
            },
        ),
    ]
